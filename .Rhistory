main = "Without ties")
lines(no_ties$t0,  no_ties$KMAhat, type = "s", xlab = "Time", col = "red")
lines(no_ties$t0, no_ties$lower, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$upper, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$lowerKM, type = "s", lty = "dashed", col = "red")
lines(no_ties$t0, no_ties$upperKM, type = "s", lty = "dashed", col = "red")
#lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(seq, cum_weibull_haz(seq, 4.5,22.5), col = "green")
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical"), col=c("red", "blue", "green"), lty=1:2, cex=0.8)
#no ties
plot(no_ties$t0, no_ties$Ahat, type = "s", xlab = "Time", ylab = "Cumulative hazard", col = "blue",
main = "Without ties")
lines(no_ties$t0,  no_ties$KMAhat, type = "s", xlab = "Time", col = "red")
lines(no_ties$t0, no_ties$lower, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$upper, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$lowerKM, type = "s", lty = "dashed", col = "red")
lines(no_ties$t0, no_ties$upperKM, type = "s", lty = "dashed", col = "red")
#lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(seq, cum_weibull_haz(seq, 4.5,22.5), col = "green")
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical"), col=c("blue", "red", "green"), lty=1:2, cex=0.8)
#no ties
plot(no_ties$t0, no_ties$Ahat, type = "s", xlab = "Time", ylab = "Cumulative hazard", col = "blue",
main = "Without ties")
lines(no_ties$t0,  no_ties$KMAhat, type = "s", col = "red")
lines(no_ties$t0, no_ties$lower, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$upper, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$lowerKM, type = "s", lty = "dashed", col = "red")
lines(no_ties$t0, no_ties$upperKM, type = "s", lty = "dashed", col = "red")
#lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(seq, cum_weibull_haz(seq, 4.5,22.5), col = "green")
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical"), col=c("blue", "red", "green"), lty=1:2, cex=0.8)
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical"), col=c("blue", "red", "green"), lty=1, cex=0.8)
#no ties
plot(no_ties$t0, no_ties$Ahat, type = "s", xlab = "Time", ylab = "Cumulative hazard", col = "blue",
main = "Without ties")
lines(no_ties$t0,  no_ties$KMAhat, type = "s", col = "red")
lines(no_ties$t0, no_ties$lower, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$upper, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$lowerKM, type = "s", lty = "dashed", col = "red")
lines(no_ties$t0, no_ties$upperKM, type = "s", lty = "dashed", col = "red")
#lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(seq, cum_weibull_haz(seq, 4.5,22.5), col = "green")
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical"), col=c("blue", "red", "green"), lty=1, cex=0.8)
?legend
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green"), lty=1:2, cex=0.8)
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green"), lty=1, cex=0.8)
#no ties
plot(no_ties$t0, no_ties$Ahat, type = "s", xlab = "Time", ylab = "Cumulative hazard", col = "blue",
main = "Without ties")
lines(no_ties$t0,  no_ties$KMAhat, type = "s", col = "red")
lines(no_ties$t0, no_ties$lower, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$upper, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$lowerKM, type = "s", lty = "dashed", col = "red")
lines(no_ties$t0, no_ties$upperKM, type = "s", lty = "dashed", col = "red")
#lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(seq, cum_weibull_haz(seq, 4.5,22.5), col = "green")
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green"), lty=1, cex=0.8)
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green", "dashed"), lty=1, cex=0.8)
?plot
?legend
#no ties
plot(no_ties$t0, no_ties$Ahat, type = "s", xlab = "Time", ylab = "Cumulative hazard", col = "blue",
main = "Without ties")
lines(no_ties$t0,  no_ties$KMAhat, type = "s", col = "red")
lines(no_ties$t0, no_ties$lower, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$upper, type = "s", lty = "dashed", col = "blue")
lines(no_ties$t0, no_ties$lowerKM, type = "s", lty = "dashed", col = "red")
lines(no_ties$t0, no_ties$upperKM, type = "s", lty = "dashed", col = "red")
#lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(seq, cum_weibull_haz(seq, 4.5,22.5), col = "green")
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green", "NA"), lty = c(1,1,1,2), cex=0.8)
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green", "black"), lty = c(1,1,1,2), cex=0.8)
#with ties
plot(with_ties$t0, with_ties$Ahat, type = "s", xlab = "Time", ylab = "Cumulative hazard", col = "blue",
main = "With ties")
lines(with_ties$t0,  with_ties$KMAhat, type = "s", xlab = "Time", col = "red")
lines(with_ties$t0, with_ties$upper, type = "s", lty = "dashed", col = "blue")
lines(with_ties$t0, with_ties$lower, type = "s", lty = "dashed", col = "blue")
lines(with_ties$t0, with_ties$lowerKM, type = "s", lty = "dashed", col = "red")
lines(with_ties$t0, with_ties$upperKM, type = "s", lty = "dashed", col = "red")
#lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(seq, cum_weibull_haz(seq, 4.5,22.5), col = "green") %>%
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green", "black"), lty = c(1,1,1,2), cex=0.8)
#This part includes censoring
c <- rexp(n, 1/80)
#lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(seq, cum_weibull_haz(seq, 4.5,22.5), col = "green") %>%
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green", "black"), lty = c(1,1,1,2), cex=0.8)
#lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(seq, cum_weibull_haz(seq, 4.5,22.5), col = "green")
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green", "black"), lty = c(1,1,1,2), cex=0.8)
#na
plot(no_ties$t0, no_ties$Ahat, type = "s", xlab = "Time", ylab = "Cumulative hazard",
main = "Nelson-Aalen")
lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(with_censor$t0, with_censor$Ahat, type = "s", col = "blue")
#This is the relevant dataframe in case of censoring (t0, d0, y0)
#Should work with or without ties
with_censor <- censored %>%
mutate(Ahat = cumsum(d0 / y0)) %>%
mutate(var = cumsum(1/(y0^2))) %>%
mutate(lower = Ahat*exp(-qnorm(0.95) * sqrt(var)/ Ahat)) %>%
mutate(upper = Ahat*exp(+qnorm(0.95) * sqrt(var)/ Ahat)) %>%
mutate(KMhat = cumprod((1-d0/y0))) %>%
mutate(varKM = KMhat^2*cumsum(d0/(y0*(y0-d0)))) %>%
mutate(lowerKM = -log(KMhat-qnorm(0.95) * sqrt(varKM))) %>%
mutate(upperKM = -log(KMhat+qnorm(0.95) * sqrt(varKM))) %>%
mutate(KMAhat = -log(KMhat))
#na
plot(no_ties$t0, no_ties$Ahat, type = "s", xlab = "Time", ylab = "Cumulative hazard",
main = "Nelson-Aalen")
#This part includes censoring
c <- rexp(n, 1/80)
censored <- data.frame(t0 = t0, c = c) %>%
mutate(cens = as.numeric(t0>c)) %>%
mutate(t0 = ifelse(cens==1, c, t0)) %>%
mutate(t0_bin = round(t0 + 0.05, digits = 1)) %>%
group_by(t0_bin) %>%
summarise(d0 = sum(cens==0),
c0 = sum(cens==1)) %>%
mutate(e0 = d0 + c0) %>%
mutate(y0 = cumsum(e0 %>%  rev()) %>% rev()) %>%
mutate(t0 = as.numeric(t0_bin)) #just for the name, I'm lazy
#This is the relevant dataframe in case of censoring (t0, d0, y0)
#Should work with or without ties
with_censor <- censored %>%
mutate(Ahat = cumsum(d0 / y0)) %>%
mutate(var = cumsum(1/(y0^2))) %>%
mutate(lower = Ahat*exp(-qnorm(0.95) * sqrt(var)/ Ahat)) %>%
mutate(upper = Ahat*exp(+qnorm(0.95) * sqrt(var)/ Ahat)) %>%
mutate(KMhat = cumprod((1-d0/y0))) %>%
mutate(varKM = KMhat^2*cumsum(d0/(y0*(y0-d0)))) %>%
mutate(lowerKM = -log(KMhat-qnorm(0.95) * sqrt(varKM))) %>%
mutate(upperKM = -log(KMhat+qnorm(0.95) * sqrt(varKM))) %>%
mutate(KMAhat = -log(KMhat))
#na
plot(no_ties$t0, no_ties$Ahat, type = "s", xlab = "Time", ylab = "Cumulative hazard",
main = "Nelson-Aalen")
lines(with_ties$t0, with_ties$Ahat, type = "s", col = "red")
lines(with_censor$t0, with_censor$Ahat, type = "s", col = "blue")
lines(with_censor$t0, with_censor$lower, type = "s", lty = "dashed", col = "blue")
plot(with_censor$t0, with_censor$Ahat, type = "s", col = "blue")
lines(with_censor$t0, with_censor$lower, type = "s", lty = "dashed", col = "blue")
lines(with_censor$t0, with_censor$upper, type = "s", lty = "dashed", col = "blue")
lines(with_censor$t0, with_censor$KMAhat, type = "s", col = "red")
lines(with_censor$t0, with_censor$lowerKM, type = "s", lty = "dashed", col = "red")
lines(with_censor$t0, with_censor$upperKM, type = "s", lty = "dashed", col = "red")
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green", "black"), lty = c(1,1,1,2), cex=0.8)
plot(with_censor$t0, with_censor$Ahat, type = "s", col = "blue")
lines(with_censor$t0, with_censor$lower, type = "s", lty = "dashed", col = "blue")
lines(with_censor$t0, with_censor$upper, type = "s", lty = "dashed", col = "blue")
lines(with_censor$t0, with_censor$KMAhat, type = "s", col = "red")
lines(with_censor$t0, with_censor$lowerKM, type = "s", lty = "dashed", col = "red")
lines(with_censor$t0, with_censor$upperKM, type = "s", lty = "dashed", col = "red")
legend("topleft", legend=c("Nelson-Aalen", "Kaplan-Meier", "Theoretical", "Confidence Interval"),
col=c("blue", "red", "green", "black"), lty = c(1,1,1,2), cex=0.8)
plot(with_censor$t0, with_censor$Ahat, type = "s", col = "blue", xlab = "Time", ylab = "Cumulative hazard",
main = "With Censoring")
?legend
?mtext
#hazard NA. very cool
plot(with_censor$t0, diff(c(0,with_censor$Ahat)), type = "s", col = "blue",
main = "Hazard Rate", xlab = "Time", ylab = expression(alpha~"(t)"))
lines(with_censor$t0, diff(c(0,with_censor$KMAhat)), type = "s", col = "red")
lines(seq, weibull_haz(seq, fitW$estimate["shape"], fitW$estimate["scale"]))
lines(seq, weibull_haz(seq, fitW$estimate["shape"], fitW$estimate["scale"]))
#Fit weibull distr to uncensored data
fitW <- fitdist(uncensored$t0, "weibull", method = "mle", lower = c(0, 0))
dwei = dweibull(seq, shape=fitW$estimate["shape"], scale=fitW$estimate["scale"])
uncensored <- censored %>%
gather(key = "Type", value = "Number", d0, c0) %>%
filter(Type == "d0") %>%
filter(Number > 0)
#Fit weibull distr to uncensored data
fitW <- fitdist(uncensored$t0, "weibull", method = "mle", lower = c(0, 0))
dwei = dweibull(seq, shape=fitW$estimate["shape"], scale=fitW$estimate["scale"])
#hazard NA. very cool
plot(with_censor$t0, diff(c(0,with_censor$Ahat)), type = "s", col = "blue",
main = "Hazard Rate", xlab = "Time", ylab = expression(alpha~"(t)"))
lines(with_censor$t0, diff(c(0,with_censor$KMAhat)), type = "s", col = "red")
lines(seq, weibull_haz(seq, fitW$estimate["shape"], fitW$estimate["scale"]))
t1 <- rweibull(200, shape = 5.5, scale = 22.5)
t2 <- rweibull(100, shape = 4.5, scale = 28)
t1
?Rep
?rep
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,200))
?data.frame
times <- rbind(t1, t2) %>%
as.data.frame() %>%
setNames(c("Time", "Type"))
# Chunk 1
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(fitdistrplus))
# Chunk 2
t1 <- cbind(rweibull(200, shape = 5.5, scale = 22.5), rep(1, 200))
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,200))
times <- rbind(t1, t2) %>%
as.data.frame() %>%
setNames(c("Time", "Type"))
times
times <- rbind(t1, t2) %>%
as.data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 0,
y0 = cumsum(d0 %>% rev()) %>% rev())
times
times <- rbind(t1, t2) %>%
as.data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 1,
y0 = cumsum(d0 %>% rev()) %>% rev())
times
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,100))
t1 <- cbind(rweibull(200, shape = 5.5, scale = 22.5), rep(1, 200))
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,100))
times <- rbind(t1, t2) %>%
as.data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 1,
y0 = cumsum(d0 %>% rev()) %>% rev())
times
times %>% filter(Type == 1)
times %>% filter(Type == 2)
times
t1
t2
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 1,
y0 = cumsum(d0 %>% rev()) %>% rev())
times
mutate(nHat = cumsum(d0/y0))
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 1,
y0 = cumsum(d0 %>% rev()) %>% rev(),
nelAal = cumsum(d0/y0))
times
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 1,
y0 = cumsum(d0 %>% rev()) %>% rev(),
nelAal = cumsum(d0/y0)) %>%
ungroup()
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 1.25)
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 1,
y0 = cumsum(d0 %>% rev()) %>% rev(),
nelAal = cumsum(d0/y0))
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 1.25)
times$Type = as.factor(times$Factor)
times$Type = as.factor(times$Type)
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 1.25)
nelAal = cumsum(d0/y0) %>%
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 1,
y0 = cumsum(d0 %>% rev()) %>% rev(),
nelAal = cumsum(d0/y0)) %>%
ungroup()
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 1,
y0 = cumsum(d0 %>% rev()) %>% rev(),
nelAal = cumsum(d0/y0)) %>%
ungroup()
times
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d0 = 1,
y0 = cumsum(d0 %>% rev()) %>% rev(),
nelAal = cumsum(d0/y0))
times$Type = as.factor(times$Type)
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 1.25)
times
?spread
times %>% spread(Type)
times %>% pivot_wider(Type, c(d0, y0))
?pivot_wider
times %>% pivot_wider(Type, d0)
times
times %>% ungroup() %>% pivot_wider(Type, d0)
times %>% ungroup() %>% pivot_wider(Type, c(d0, y0))
warpbreaks <- as_tibble(warpbreaks[c("wool", "tension", "breaks")])
warpbreaks
warpbreaks %>%
pivot_wider(
names_from = wool,
values_from = breaks,
values_fn = list(breaks = mean)
)
times
times %>% mutate(d01 = ifelse(Type == 1, 1, 0),)
logRankData <- times %>%
ungroup() %>%
mutate(d01 = ifelse(Type == 1, 1, 0),
d01 = ifelse(Type == 2, 1, 0))
logRankData
logRankData <- times %>%
ungroup() %>%
mutate(d01 = ifelse(Type == 1, 1, 0),
d02 = ifelse(Type == 2, 1, 0))
logRankData
logRankData <- times %>%
ungroup() %>%
mutate(d01 = ifelse(Type == 1, 1, 0),
d02 = ifelse(Type == 2, 1, 0)) %>%
mutate(yDot = cumsum(d0 %>% rev()) %>% rev())
logRankData
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d = 1,
y = cumsum(d %>% rev()) %>% rev(),
nelAal = cumsum(d0/y))
times$Type = as.factor(times$Type)
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 1.25)
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 1)
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0),
yBoth = cumsum(d0 %>% rev()) %>% rev(),
y1 = cumsum(d1 %>% rev()) %>% rev(),
Z1 = cumsum(d01) - cumsum(y1*d/yBoth))
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0),
yBoth = cumsum(d0 %>% rev()) %>% rev(),
y1 = cumsum(d1 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth))
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d = 1,
y = cumsum(d %>% rev()) %>% rev(),
nelAal = cumsum(d/y))
times$Type = as.factor(times$Type)
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0),
yBoth = cumsum(d %>% rev()) %>% rev(),
y1 = cumsum(d1 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth))
logRankData
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0),
yBoth = cumsum(d %>% rev()) %>% rev(),
y1 = cumsum(d1 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = y1*y1*d/yBoth^2)
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0),
yBoth = cumsum(d %>% rev()) %>% rev(),
y1 = cumsum(d1 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = y1*y1*d/yBoth^2,
testStat = Z1/sqrt(varZ1))
logRankData
logRankData$testStat
logRankData$varZ1
logRankData$yBoth
logRankData$y1
logRankData$y2
logRankData$y
times
times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0))
a <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0))
cumsum(a$d1 %>% rev()) %>% rev()
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0),
yBoth = cumsum(d %>% rev()) %>% rev(),
y1 = cumsum(d1 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = y1*y1*d/yBoth^2,
testStat = Z1/sqrt(varZ1))
logRankData$testStat
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0),
yBoth = cumsum(d %>% rev()) %>% rev(),
y1 = cumsum(d1 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = y1*y2*d/yBoth^2,
testStat = Z1/sqrt(varZ1))
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0),
yBoth = cumsum(d %>% rev()) %>% rev(),
y1 = cumsum(d1 %>% rev()) %>% rev(),
y2 = cumsum(d2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = y1*y2*d/yBoth^2,
testStat = Z1/sqrt(varZ1))
logRankTest
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, 1, 0),
d2 = ifelse(Type == 2, 1, 0),
yBoth = cumsum(d %>% rev()) %>% rev(),
y1 = cumsum(d1 %>% rev()) %>% rev(),
y2 = cumsum(d2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = y1*y2*d/yBoth^2,
testStat = Z1/sqrt(varZ1))
logRankData$testStat
times
kmData %>% times %>%
mutate(KM = cumprod(1 - d/y))
kmData <- times %>%
mutate(KM = cumprod(1 - d/y))
kmData
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type")) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(d = 1,
y = cumsum(d %>% rev()) %>% rev(),
nelAal = cumsum(d/y),
km = cumprod(1 - d/y))
times %>%
ggplot(aes(x = Time, y = KM, color = Type)) +
geom_line(size = 0.8)
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
times$Type = as.factor(times$Type)
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
