c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth))
logRankData
logRankData$Z1
times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, d, 0),
d2 = ifelse(Type == 2, d, 0),
c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = y1*y2*d/yBoth^2,
testStat = Z1/sqrt(varZ1))
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, d, 0),
d2 = ifelse(Type == 2, d, 0),
c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = y1*y2*d/yBoth^2,
testStat = Z1/sqrt(varZ1))
logRankData$Type =  as.factor(logRankData$Type)
logRankData %>%
ggplot(aes(x = Time, y = testStat, color = Type)) +
geom_line(size = 0.8)
logRankData$Type
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8)
logRankData$testStat
logRankData
logRankData$d1
logRankData$d
#This part includes censoring
c <- rexp(n, 1/80)
censored <- data.frame(t0 = t0, c = c) %>%
mutate(cens = as.numeric(t0>c)) %>%
mutate(t0 = ifelse(cens==1, c, t0)) %>%
mutate(t0_bin = round(t0 + 0.05, digits = 1)) %>%
group_by(t0_bin) %>%
summarise(d0 = sum(cens==0),
c0 = sum(cens==1)) %>%
mutate(e0 = d0 + c0) %>%
mutate(y0 = cumsum(e0 %>%  rev()) %>% rev()) %>%
mutate(t0 = as.numeric(t0_bin)) #just for the name, I'm lazy
censored
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, d, 0),
d2 = ifelse(Type == 2, d, 0),
c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = cumsum(y1*y2*d/yBoth^2),
testStat = Z1/sqrt(varZ1))
logRankData$Type =  as.factor(logRankData$Type)
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8)
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8)
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96))
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96), size = 0.8)
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96), size = 0.8, color = "blue")
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96), size = 0.8, color = "blue") +
geom_line(aes(x = Time, y = 1.96), size = 0.8, color = "blue")
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
library(survival)
suppressPackageStartupMessages(library(survival))
times
times$SurvObj <- with(times, Surv(time, d == 1))
times$SurvObj <- with(times, Surv(as.numeric(time), d == 1))
times$Time
typeof(times$Time)
as.numeric(times$Time)
times$SurvObj <- with(times, Surv(Time, d == 1))
times
tm <- coxph(SurvObj ~ Type, data = times)
tm
summary(tm)
kable(summary(tm))
t1 <- cbind(rweibull(200, shape = 5.5, scale = 22.5), rep(1, 200), runif(200, 20, 60))
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,100), runif(100, 30, 60))
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type", "C")) %>%
mutate(c = ifelse(Time > C, 1, 0),
Time = ifelse(Time > C, C, Time),
d = 1 - c,
e = c + d) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(y = cumsum(e %>% rev()) %>% rev(),
nelAal = cumsum(d/y),
km = cumprod(1 - d/y))
times$Type = as.factor(times$Type)
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
plot(tm)
# Chunk 1
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(survival))
# Chunk 2
#Cens Unif(20, 60)
t1 <- cbind(rweibull(200, shape = 5.5, scale = 22.5), rep(1, 200))
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,100))
c <- cbind(runif(300, 20, 60))
times <- rbind(t1, t2) %>%
cbind(c) %>%
data.frame() %>%
setNames(c("Time", "Type", "C")) %>%
mutate(c = ifelse(Time > C, 1, 0),
Time = ifelse(Time > C, C, Time),
d = 1 - c,
e = c + d) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(y = cumsum(e %>% rev()) %>% rev(),
nelAal = cumsum(d/y),
km = cumprod(1 - d/y))
times$Type = as.factor(times$Type)
#Different Nelson-Aalens
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
#Logrank. Vill vi ha chi2 eller wald-test?
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, d, 0),
d2 = ifelse(Type == 2, d, 0),
c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = cumsum(y1*y2*d/yBoth^2),
testStat = Z1/sqrt(varZ1))
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96), size = 0.8, color = "blue") +
geom_line(aes(x = Time, y = 1.96), size = 0.8, color = "blue")
#Kaplan-Meier
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
#Cox Regression
times$SurvObj <- with(times, Surv(Time, d == 1))
tm <- coxph(SurvObj ~ Type, data = times)
summary(tm)
# Chunk 3
t1 <- cbind(rweibull(200, shape = 5.5, scale = 22.5), rep(1, 200), runif(200, 20, 60))
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,100), runif(100, 30, 60))
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type", "C")) %>%
mutate(c = ifelse(Time > C, 1, 0),
Time = ifelse(Time > C, C, Time),
d = 1 - c,
e = c + d) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(y = cumsum(e %>% rev()) %>% rev(),
nelAal = cumsum(d/y),
km = cumprod(1 - d/y))
times$Type = as.factor(times$Type)
#Different Nelson-Aalens
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
#Logrank. Vill vi ha chi2 eller wald-test?
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, d, 0),
d2 = ifelse(Type == 2, d, 0),
c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = cumsum(y1*y2*d/yBoth^2),
testStat = Z1/sqrt(varZ1))
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96), size = 0.8, color = "blue") +
geom_line(aes(x = Time, y = 1.96), size = 0.8, color = "blue")
#Kaplan-Meier
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
#Cox Regression
times$SurvObj <- with(times, Surv(Time, d == 1))
tm <- coxph(SurvObj ~ Type, data = times)
plot(tm)
tm <- coxph(SurvObj ~ Type, data = times)
plot(tm)
fit(tm)
plot(survfit(tm))
tm
?survfit
tm <- coxph(SurvObj ~ factor(Type), data = times)
plot(tm)
tm
tm <- coxph(SurvObj ~ as.factor(Type), data = times)
tm
tm <- coxph(SurvObj ~ Type, data = times)
plot(tm)
tm <- coxph(SurvObj ~ Type, data = times)
require('survminer')
install.packages("survminer")
install.packages("survminer")
suppressPackageStartupMessages(library(survminer))
suppressPackageStartupMessages(library(survival))
tiomes
times
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
times$SurvObj <- with(times, Surv(Time, d == 1))
# Chunk 1
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(survival))
# Chunk 2
#Cens Unif(20, 60)
t1 <- cbind(rweibull(200, shape = 5.5, scale = 22.5), rep(1, 200))
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,100))
c <- cbind(runif(300, 20, 60))
times <- rbind(t1, t2) %>%
cbind(c) %>%
data.frame() %>%
setNames(c("Time", "Type", "C")) %>%
mutate(c = ifelse(Time > C, 1, 0),
Time = ifelse(Time > C, C, Time),
d = 1 - c,
e = c + d) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(y = cumsum(e %>% rev()) %>% rev(),
nelAal = cumsum(d/y),
km = cumprod(1 - d/y))
times$Type = as.factor(times$Type)
#Different Nelson-Aalens
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
#Logrank. Vill vi ha chi2 eller wald-test?
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, d, 0),
d2 = ifelse(Type == 2, d, 0),
c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = cumsum(y1*y2*d/yBoth^2),
testStat = Z1/sqrt(varZ1))
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96), size = 0.8, color = "blue") +
geom_line(aes(x = Time, y = 1.96), size = 0.8, color = "blue")
#Kaplan-Meier
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
#Cox Regression
times$SurvObj <- with(times, Surv(Time, d == 1))
tm <- coxph(SurvObj ~ Type, data = times)
summary(tm)
# Chunk 3
t1 <- cbind(rweibull(200, shape = 5.5, scale = 22.5), rep(1, 200), runif(200, 20, 60))
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,100), runif(100, 30, 60))
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type", "C")) %>%
mutate(c = ifelse(Time > C, 1, 0),
Time = ifelse(Time > C, C, Time),
d = 1 - c,
e = c + d) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(y = cumsum(e %>% rev()) %>% rev(),
nelAal = cumsum(d/y),
km = cumprod(1 - d/y))
times$Type = as.factor(times$Type)
#Different Nelson-Aalens
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
#Logrank. Vill vi ha chi2 eller wald-test?
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, d, 0),
d2 = ifelse(Type == 2, d, 0),
c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = cumsum(y1*y2*d/yBoth^2),
testStat = Z1/sqrt(varZ1))
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96), size = 0.8, color = "blue") +
geom_line(aes(x = Time, y = 1.96), size = 0.8, color = "blue")
#Kaplan-Meier
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
#Cox Regression
times$SurvObj <- with(times, Surv(Time, d == 1))
tm <- coxph(SurvObj ~ Type, data = times)
times$SurvObj <- with(times, Surv(Time, d == 1))
tm <- coxph(SurvObj ~ Type, data = times)
tm$formula
tm$linear.predictors
plot(survfit(model, newdata = data.frame("Type" = c(1, 2))))
plot(survfit(tm, newdata = data.frame("Type" = c(1, 2))))
tm <- coxph(SurvObj ~ as.factor(Type), data = times)
plot(survfit(tm, newdata = data.frame("Type" = c(1, 2))))
a <- survfit(tm, newdata = data.frame("Type" = c(1, 2)))
a
a <- survfit(tm, newdata = data.frame("Type" = c(1, 2)))
install.packages("survminer")
install.packages("rstatix")
install.packages("car")
install.packages("pbkrtest")
install.packages("car")
install.packages("devtools")
library(devtools)
devtools::install_github("kassambara/survminer", build_vignettes = FALSE)
sessionInfo()
install.packages("lme4")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/pbkrtest/pbkrtest_0.4-4.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("survminer")
suppressPackageStartupMessages(library(survminer))
ggsurvplot(a)
ggsurvplot(a, data = times)
times$SurvObj <- with(times, Surv(Time, d == 1))
tm <- coxph(SurvObj ~ as.factor(Type), data = times)
a <- survfit(tm, newdata = data.frame("Type" = c(1, 2)))
ggsurvplot(a, data = times)
# Chunk 1
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(survival)) #https://stackoverflow.com/questions/35207624/package-pbkrtest-is-not-available-for-r-version-3-2-2
suppressPackageStartupMessages(library(survminer))
# Chunk 2
#Cens Unif(20, 60)
t1 <- cbind(rweibull(200, shape = 5.5, scale = 22.5), rep(1, 200))
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,100))
c <- cbind(runif(300, 20, 60))
times <- rbind(t1, t2) %>%
cbind(c) %>%
data.frame() %>%
setNames(c("Time", "Type", "C")) %>%
mutate(c = ifelse(Time > C, 1, 0),
Time = ifelse(Time > C, C, Time),
d = 1 - c,
e = c + d) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(y = cumsum(e %>% rev()) %>% rev(),
nelAal = cumsum(d/y),
km = cumprod(1 - d/y))
times$Type = as.factor(times$Type)
#Different Nelson-Aalens
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
#Logrank. Vill vi ha chi2 eller wald-test?
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, d, 0),
d2 = ifelse(Type == 2, d, 0),
c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = cumsum(y1*y2*d/yBoth^2),
testStat = Z1/sqrt(varZ1))
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96), size = 0.8, color = "blue") +
geom_line(aes(x = Time, y = 1.96), size = 0.8, color = "blue")
#Kaplan-Meier
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
#Cox Regression
times$SurvObj <- with(times, Surv(Time, d == 1))
tm <- coxph(SurvObj ~ as.factor(Type), data = times)
ggsurvplot(survfit(tm, newdata = data.frame("Type" = c(1, 2))),
data = times)
# Chunk 3
t1 <- cbind(rweibull(200, shape = 5.5, scale = 22.5), rep(1, 200), runif(200, 20, 60))
t2 <- cbind(rweibull(100, shape = 4.5, scale = 28), rep(2,100), runif(100, 30, 60))
times <- rbind(t1, t2) %>%
data.frame() %>%
setNames(c("Time", "Type", "C")) %>%
mutate(c = ifelse(Time > C, 1, 0),
Time = ifelse(Time > C, C, Time),
d = 1 - c,
e = c + d) %>%
group_by(Type) %>%
arrange(Time) %>%
mutate(y = cumsum(e %>% rev()) %>% rev(),
nelAal = cumsum(d/y),
km = cumprod(1 - d/y))
times$Type = as.factor(times$Type)
#Different Nelson-Aalens
times %>%
ggplot(aes(x = Time, y = nelAal, color = Type)) +
geom_line(size = 0.8)
#Logrank. Vill vi ha chi2 eller wald-test?
logRankData <- times %>%
ungroup() %>%
mutate(d1 = ifelse(Type == 1, d, 0),
d2 = ifelse(Type == 2, d, 0),
c1 = ifelse(Type == 1, c, 0),
c2 = ifelse(Type == 2, c, 0),
e1 = d1 + c1,
e2 = d2 + c2) %>%
mutate(yBoth = cumsum(e %>% rev()) %>% rev(),
y1 = cumsum(e1 %>% rev()) %>% rev(),
y2 = cumsum(e2 %>% rev()) %>% rev(),
Z1 = cumsum(d1) - cumsum(y1*d/yBoth),
varZ1 = cumsum(y1*y2*d/yBoth^2),
testStat = Z1/sqrt(varZ1))
logRankData %>%
ggplot(aes(x = Time, y = testStat)) +
geom_line(size = 0.8) +
geom_line(aes(x = Time, y = -1.96), size = 0.8, color = "blue") +
geom_line(aes(x = Time, y = 1.96), size = 0.8, color = "blue")
#Kaplan-Meier
times %>%
ggplot(aes(x = Time, y = km, color = Type)) +
geom_line(size = 0.8)
#Cox Regression
times$SurvObj <- with(times, Surv(Time, d == 1))
tm <- coxph(SurvObj ~ as.factor(Type), data = times)
ggsurvplot(survfit(tm, newdata = data.frame("Type" = c(1, 2))),
data = times)
?ggsurvplot
ggsurvplot(survfit(tm, newdata = data.frame("Type" = c(1, 2))),
data = times) +
ylab("Hej")
ggsurvplot(survfit(tm, newdata = data.frame("Type" = c(1, 2))),
data = times)
